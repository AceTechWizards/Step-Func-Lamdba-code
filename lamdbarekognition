from __future__ import print_function

import boto3
from decimal import Decimal
import json
import urllib.parse

print('Loading function')

rekognition = boto3.client('rekognition')


# --------------- Helper Functions to call Rekognition APIs ------------------


def detect_text(bucket, key):
    print("detecting")
    response = rekognition.detect_text(Image={"S3Object": {"Bucket": bucket, "Name": key}})
    return response


# --------------- Main handler ------------------


def lambda_handler(event, context):
    '''Demonstrates S3 trigger that uses
    Rekognition APIs to detect faces, labels and index faces in S3 Object.
    '''
    #print("Received event: " + json.dumps(event, indent=2))

    # Get the object from the event
    #bucket = event['Records'][0]['s3']['bucket']['name']
    #key = urllib.parse.unquote_plus(event['Records'][0]['s3']['object']['key'], encoding='utf-8')
    bucketName = event['Bucket']
    fileName = event['FileName']
    studentName= event['StudentName']
    print(fileName)
    print(bucketName)
    print(studentName)
    all_text = list()
    textanswer =""
    try:
        # Calls rekognition DetectFaces API to detect faces in S3 object
        print("calling function detect")
        response = detect_text(bucketName, fileName)
        print("detection ")
        for text in response['TextDetections']:
            if text['Type'] == 'WORD':
                all_text.append(text['DetectedText'])
                textanswer = textanswer + " " + text['DetectedText']
                
        
        print(all_text)
        return { "StudentName": studentName, "FileName": fileName, "Answer" : textanswer}
            
        # Calls rekognition DetectLabels API to detect labels in S3 object
        #response = detect_labels(bucket, key)

        # Calls rekognition IndexFaces API to detect faces in S3 object and index faces into specified collection
        #response = index_faces(bucket, key)

        # Print response to console.
        #print(response)

        #return response
    except Exception as e:
        print(e)
        print("Error processing object {} from bucket {}. ".format(fileName, bucketName) +
              "Make sure your object and bucket exist and your bucket is in the same region as this function.")
        raise e
